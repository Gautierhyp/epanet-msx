# Cygwin/MinGW Makefile for EPANET-MSX

# This will build EPANET-MSX as an executable without either building
# an MSX DLL or linking with the EPANET DLL.  I.e., it simply builds
# an executable by linking all the EPANET and MSX object files.
#
# You should normally be building EPANET-MSX using the supplied
# Makefile rather than using this file named 'Makefile-EXE'
#
# The standalone executable is named epanetmsx_nolib_gcc_<Rev>.exe
# where <Rev> is the atomic revision number of the EPANET SVN repo,
# so the results of each build can be unambiguously tracked to a repo Rev.
# This makefile assumes a Cygwin environment with minimal
# MinGW installation, and uses the MinGW gcc compiler from
# the MinGW install directory.
# The current release of MinGW can be obtained from
# http://sourceforge.net/project/showfiles.php?group_id=2435
# The current release of the Cygwin environment can be
# obtained from http://www.cygwin.com

# The following targets are defined (for execution in
# the build directory under the Cygwin environment):
# make
#     -Builds epanetmsx_gcc_<Rev>.exe
# make install
#     -Installs epanetmsx_gcc_nolib_<Rev>.exe
#      in <prefix>/bin, where <prefix> defaults to ~ (and can be set
#      below to something different - see "Install directories")
# make clean
#     -Removes object and library files, returning the build directory
#      to its pristine state.

SHELL = /bin/sh

# C H A N G E  H E R E  A S  N E E D E D
# Change (as needed) the MinGW install directory below.
# Change (as needed) the location off the MS LIB tool.
# You may also wish to change the install path 'prefix',
# or the compiler flags, but these defaults should be fine.

# MinGW top level install directory, accessible from build environment
MinGWdir = /cygdrive/c/MinGW

# Target filenames
# svnname.sh constructs a name: <prefix><root><Rev><postfix>
# where <Rev> is the atomic revision number of the svn repo.
epanetsvnpath = ../../../../BASE/trunk
epanetmsxsvnpath = ../../../trunk
epanetmsxrootname := $(shell ../svnname.sh $(epanetmsxsvnpath) "" epanetmsx_gcc_nolib_ "")
exename := $(epanetmsxrootname).exe
# Location of EPANET-MSX toolkit includes
epanetincludedir = $(epanetsvnpath)/include
epanetmsxincludedir = ../../include
# Search path for sources
epanetsrcdir = ../../../../BASE/trunk/src
epanetmsxsrcdir = ../../src
epanetcommondir = $(epanetsvnpath)/common
VPATH = $(epanetmsxsrcdir):$(epanetcommondir):$(epanetsrcdir)

# Install directories
winprefix = $(shell cygpath -w $$HOME)
prefix = ~
exec_prefix = $(prefix)
srcdir = .
libdir = $(exec_prefix)/lib
winlibdir = "$(winprefix)\lib"
bindir = $(exec_prefix)/bin
includedir = $(prefix)/include
winincludedir = "$(winprefix)\include"
datarootdir = $(prefix)/share
docdir = $(datarootdir)/doc/epanet

# Compiler and flags
# MinGW gcc
CC = $(MinGWdir)/bin/gcc
CFLAGS = -g -O3
CPPFLAGS = -I $(srcdir) -I $(epanetmsxincludedir) -I $(epanetincludedir) -I $(epanetcommondir)
LDFLAGS =

# Installer
INSTALL = install
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA = $(INSTALL) -m 644

# Object files for the executable
epanetmsx_objs=epanetmsx.o chemistry.o inputmsx.o mathexpr.o newton.o outputmsx.o \
	           project.o qualitymsx.o reportmsx.o rk5.o ros2.o toolkitmsx.o msxfile.o
epanetcommon_objs=hash.o mempool.o utils.o
epanet_objs=toolkit.o hydraul.o inpfile.o input1.o input2.o \
	    input3.o output.o quality.o report.o \
	    rules.o smatrix.o
# header files
epanet_heads=enumstxt.h funcs.h hash.h mempool.h text.h toolkit.h types.h vars.h
epanetmsx_heads=globals.h mathexpr.h mempool.h newton.h rk5.h ros2.h typesmsx.h \
	               $(epanetmsxincludedir)/epanetmsx.h
epanetcommon_heads=hash.h mempool.h utils.h

.PHONY: all
all: $(exename)

$(exename): $(epanetmsx_objs) $(epanet_objs) $(epanetcommon_objs)
	$(CC) $(CFLAGS) -o $@ $(LDFLAGS) $^

$(epanetmsx_objs): $(epanetmsx_heads)

$(epanet_objs): $(epanet_heads)

$(epanetcommon_objs): $(epanetcommon_heads)

.PHONY: install
install:
	$(INSTALL_PROGRAM) -D $(exename) $(bindir)/$(exename)

.PHONY: uninstall
uninstall:

.PHONY: check
check:

.PHONY: clean
clean:
	-/bin/rm *.o $(exename)
